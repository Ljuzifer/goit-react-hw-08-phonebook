{"version":3,"file":"static/js/373.47eead40.chunk.js","mappings":"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","sources":["pages/Home.styled.js","pages/Home.jsx","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.styled.js","pages/Register.jsx"],"sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport HomeImage from '../images/home.jpg';\n\nexport const HomeGlobalStyle = createGlobalStyle`\nbody{\n    /* background-image: url('https://kartinki.pics/uploads/posts/2021-07/1625655366_42-kartinkin-com-p-biblioteka-art-art-krasivo-47.jpg'); */\n\n    background-image: url(${HomeImage});\n}\n\nsvg{\n    width: 220px;\n    height: 220px;\n    color: midnightblue;\n}\n`;\n","import { Helmet } from 'react-helmet';\nimport Register from './Register';\nimport { useAuth } from 'hooks';\nimport { Box } from 'components/GlobalStyle';\nimport { HomeGlobalStyle } from './Home.styled';\nimport { GiOldMicrophone } from 'react-icons/gi';\nexport default function Home() {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <>\n      <Helmet title=\"Phonebook\" />\n\n      {!isLoggedIn ? (\n        <Register />\n      ) : (\n        <Box>\n          <h1 style={{ fontSize: 44 }}>WELCOME !!!</h1>\n          <b\n            style={{\n              display: 'inline-block',\n              fontSize: 22,\n              marginBottom: '13px',\n              textTransform: 'uppercase',\n            }}\n          >\n            It's your\n          </b>\n          <h2 style={{ fontSize: 44 }}>Phonebook Organizer</h2>\n\n          <GiOldMicrophone />\n          <HomeGlobalStyle />\n        </Box>\n      )}\n    </>\n  );\n}\n","import { Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormThumb = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  background-color: rgba(202, 202, 202, 0.8);\n  width: 480px;\n  margin: auto;\n  border: 2px outset black;\n  border-radius: 13px;\n  padding: 20px 28px;\n  margin-bottom: 28px;\n\n  button {\n    font-weight: bold;\n    margin-bottom: 28px;\n    padding: 4px 8px;\n    border-radius: 22px;\n    text-transform: uppercase;\n    background-color: rgba(144, 144, 144, 0.8);\n  }\n\n  button:hover,\n  button:focus {\n    background-color: black;\n    color: white;\n  }\n\n  label {\n    font-style: oblique;\n    font-weight: 500;\n    margin-bottom: 13px;\n\n    b {\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 500;\n      color: darkred;\n      text-transform: lowercase;\n    }\n\n    input {\n      margin-top: 8px;\n      width: 100%;\n      padding: 2px 13px;\n      border-radius: 13px;\n      outline: none;\n      text-align: center;\n      /* background-color: rgba(255, 255, 255, 0); */\n    }\n  }\n`;\n","import { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { FormThumb } from './RegisterForm.styled';\nimport { Link } from 'react-router-dom';\n// import LoadingSpinnerComponent from 'react-spinners-components';\n\nconst formSchema = Yup.object({\n  name: Yup.string().required('Must be filled'),\n  email: Yup.string().email().required('Must be filled'),\n  password: Yup.string().min(8).required('Must be filled'),\n});\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   dispatch(\n  //     register({\n  //       name: form.elements.name.value,\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n\n  const initialValues = { name: '', email: '', password: '' };\n\n  return (\n    <>\n      <h2>Registration Form</h2>\n      <h5>\n        Have an account already? <Link to=\"/login\">Sign Up</Link> please!\n      </h5>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={formSchema}\n        onSubmit={(values, actions) => {\n          dispatch(register({ ...values }));\n          // actions.resetForm();\n        }}\n      >\n        <FormThumb autoComplete=\"off\">\n          <label>\n            Username\n            <Field type=\"text\" name=\"name\" placeholder=\"Enter your name\" />\n            <ErrorMessage name=\"name\" component=\"b\" />\n          </label>\n          <label>\n            Email\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage name=\"email\" component=\"b\" />\n          </label>\n          <label>\n            Password\n            <Field\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n            />\n            <ErrorMessage name=\"password\" component=\"b\" />\n          </label>\n          <button type=\"submit\">Register</button>\n        </FormThumb>\n      </Formik>\n    </>\n  );\n}\n\n// {/* <LoadingSpinnerComponent type={'Gear'} color={'black'} size={'88px'} />; */}\n","import { createGlobalStyle } from 'styled-components';\nimport registerImage from '../images/register.jpg';\n\nexport const RegisterStyle = createGlobalStyle`\nbody{\n    /* background-image: url('https://kartinki.pics/uploads/posts/2021-07/thumbs/1625655412_56-kartinkin-com-p-biblioteka-art-art-krasivo-61.jpg'); */\n\n    background-image: url(${registerImage});\n}\n`;\n","import { Helmet } from 'react-helmet';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n// import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegisterStyle } from './Register.styled';\nimport { Box } from 'components/GlobalStyle';\n\nexport default function Register() {\n  return (\n    <Box>\n      <Helmet title=\"Registration\" />\n\n      <RegisterForm />\n      <RegisterStyle />\n    </Box>\n  );\n}\n"],"names":["HomeGlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","HomeImage","Home","isLoggedIn","useAuth","_jsxs","_Fragment","children","_jsx","Helmet","title","Box","style","fontSize","display","marginBottom","textTransform","GiOldMicrophone","Register","FormThumb","styled","Form","formSchema","Yup","name","required","email","password","min","RegisterForm","dispatch","useDispatch","Link","to","Formik","initialValues","validationSchema","onSubmit","values","actions","register","_objectSpread","autoComplete","Field","type","placeholder","ErrorMessage","component","RegisterStyle","registerImage"],"sourceRoot":""}