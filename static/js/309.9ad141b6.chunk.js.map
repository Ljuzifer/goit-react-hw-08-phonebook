{"version":3,"file":"static/js/309.9ad141b6.chunk.js","mappings":"yQAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,g/B,mBCK/BC,EAAaC,EAAAA,GAAW,CAC5BC,KAAMD,EAAAA,KAAaE,SAAS,kBAC5BC,MAAOH,EAAAA,KAAaG,QAAQD,SAAS,kBACrCE,SAAUJ,EAAAA,KAAaK,IAAI,GAAGH,SAAS,oBAG1B,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,6BACuBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,SAAQH,SAAC,YAAc,eAE3DC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,cATgB,CAAEf,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAUjDa,iBAAkBlB,EAClBmB,SAAU,SAACC,EAAQC,GACjBb,GAASc,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIH,IAEzB,EAAER,UAEFF,EAAAA,EAAAA,MAACf,EAAS,CAAC6B,aAAa,MAAKZ,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,OAAOxB,KAAK,OAAOyB,YAAY,qBAC3Cd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAAC1B,KAAK,OAAO2B,UAAU,UAEtCnB,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,QAAQxB,KAAK,QAAQyB,YAAY,sBAC7Cd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAAC1B,KAAK,QAAQ2B,UAAU,UAEvCnB,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CACJC,KAAK,WACLxB,KAAK,WACLyB,YAAY,yBAEdd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAAC1B,KAAK,WAAW2B,UAAU,UAE1ChB,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAAQd,SAAC,oBAKhC,C,6DCpEakB,GAAgBC,EAAAA,EAAAA,IAAiBjC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8MAIlBiC,G,UCDb,SAASC,IACtB,OACEvB,EAAAA,EAAAA,MAACwB,EAAAA,EAAG,CAAAtB,SAAA,EACFC,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,MAAM,kBAEdvB,EAAAA,EAAAA,KAACN,EAAY,KACbM,EAAAA,EAAAA,KAACiB,EAAa,MAGpB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.styled.js","pages/Register.jsx"],"sourcesContent":["import { Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormThumb = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  background-color: rgba(202, 202, 202, 0.8);\n  width: 480px;\n  margin: auto;\n  border: 2px outset black;\n  border-radius: 13px;\n  padding: 20px 28px;\n  margin-bottom: 28px;\n\n  button {\n    font-weight: bold;\n    margin-bottom: 28px;\n    padding: 4px 8px;\n    border-radius: 22px;\n    text-transform: uppercase;\n    background-color: rgba(144, 144, 144, 0.8);\n  }\n\n  button:hover,\n  button:focus {\n    background-color: black;\n    color: white;\n  }\n\n  label {\n    font-style: oblique;\n    font-weight: 500;\n    margin-bottom: 13px;\n\n    b {\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 500;\n      color: darkred;\n      text-transform: lowercase;\n    }\n\n    input {\n      margin-top: 8px;\n      width: 100%;\n      padding: 2px 13px;\n      border-radius: 13px;\n      outline: none;\n      text-align: center;\n      /* background-color: rgba(255, 255, 255, 0); */\n    }\n  }\n`;\n","import { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { FormThumb } from './RegisterForm.styled';\nimport { Link } from 'react-router-dom';\n// import LoadingSpinnerComponent from 'react-spinners-components';\n\nconst formSchema = Yup.object({\n  name: Yup.string().required('Must be filled'),\n  email: Yup.string().email().required('Must be filled'),\n  password: Yup.string().min(8).required('Must be filled'),\n});\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   dispatch(\n  //     register({\n  //       name: form.elements.name.value,\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n\n  const initialValues = { name: '', email: '', password: '' };\n\n  return (\n    <>\n      <h2>Registration Form</h2>\n      <h5>\n        Have an account already? <Link to=\"/login\">Sign Up</Link> please!\n      </h5>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={formSchema}\n        onSubmit={(values, actions) => {\n          dispatch(register({ ...values }));\n          // actions.resetForm();\n        }}\n      >\n        <FormThumb autoComplete=\"off\">\n          <label>\n            Username\n            <Field type=\"text\" name=\"name\" placeholder=\"Enter your name\" />\n            <ErrorMessage name=\"name\" component=\"b\" />\n          </label>\n          <label>\n            Email\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage name=\"email\" component=\"b\" />\n          </label>\n          <label>\n            Password\n            <Field\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n            />\n            <ErrorMessage name=\"password\" component=\"b\" />\n          </label>\n          <button type=\"submit\">Register</button>\n        </FormThumb>\n      </Formik>\n    </>\n  );\n}\n\n// {/* <LoadingSpinnerComponent type={'Gear'} color={'black'} size={'88px'} />; */}\n","import { createGlobalStyle } from 'styled-components';\nimport registerImage from '../images/register.jpg';\n\nexport const RegisterStyle = createGlobalStyle`\nbody{\n    /* background-image: url('https://kartinki.pics/uploads/posts/2021-07/thumbs/1625655412_56-kartinkin-com-p-biblioteka-art-art-krasivo-61.jpg'); */\n\n    background-image: url(${registerImage});\n}\n`;\n","import { Helmet } from 'react-helmet';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n// import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegisterStyle } from './Register.styled';\nimport { Box } from 'components/GlobalStyle';\n\nexport default function Register() {\n  return (\n    <Box>\n      <Helmet title=\"Registration\" />\n\n      <RegisterForm />\n      <RegisterStyle />\n    </Box>\n  );\n}\n"],"names":["FormThumb","styled","Form","_templateObject","_taggedTemplateLiteral","formSchema","Yup","name","required","email","password","min","RegisterForm","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Link","to","Formik","initialValues","validationSchema","onSubmit","values","actions","register","_objectSpread","autoComplete","Field","type","placeholder","ErrorMessage","component","RegisterStyle","createGlobalStyle","registerImage","Register","Box","Helmet","title"],"sourceRoot":""}